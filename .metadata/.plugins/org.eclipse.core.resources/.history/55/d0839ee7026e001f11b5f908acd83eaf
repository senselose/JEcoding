package Lv1;

import java.util.ArrayList;

public class 약수의_개수와_덧셈 {

	public static void main(String[] args) {
		/*
		-- 문제 설명 --
		두 정수 left와 right가 매개변수로 주어집니다. 
		left부터 right까지의 모든 수들 중에서, 약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를 return 하도록 solution 함수를 완성해주세요.
		
		-- 제한사항 --
		1 ≤ left ≤ right ≤ 1,000
		
		-- 입출력 예 --
		left	right	result
		13		17		43
		24		27		52
		
		-- 입출력 예 설명 --
		입출력 예 #1
		
		다음 표는 13부터 17까지의 수들의 약수를 모두 나타낸 것입니다.
		수	약수					약수의 개수
		13	1, 13				2
		14	1, 2, 7, 14			4
		15	1, 3, 5, 15			4
		16	1, 2, 4, 8, 16		5
		17	1, 17				2
		따라서, 13 + 14 + 15 - 16 + 17 = 43을 return 해야 합니다.
		
		입출력 예 #2
		
		다음 표는 24부터 27까지의 수들의 약수를 모두 나타낸 것입니다.
		수	약수							약수의 개수
		24	1, 2, 3, 4, 6, 8, 12, 24	8
		25	1, 5, 25					3
		26	1, 2, 13, 26				4
		27	1, 3, 9, 27					4
		따라서, 24 - 25 + 26 + 27 = 52를 return 해야 합니다.
		 */
		
		// left right 사이의 모든 수 ArrayList 안에 넣기
		// 각 요소의 약수 개수 찾기
		// answer에 모든 수를 더한 값 넣어놓은 다음에 약수의 개수가 홀수인 애들 두번씩 빼기
		
		int left = 24;
		int right = 27;
		ArrayList<Integer> num = new ArrayList<>();
		
		for(int i=left; i<=right; i++) {
			num.add(i);
		}
		
		System.out.println(num);
	}

}
